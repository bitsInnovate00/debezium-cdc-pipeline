apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: debezium-pipeline
data:
  POSTGRES_DB: testdb
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  # PostgreSQL configuration for Debezium
  postgresql.conf: |
    # Required for Debezium CDC
    wal_level = logical
    max_wal_senders = 4
    max_replication_slots = 4
  
  init.sql: |
    -- Create test database
    CREATE DATABASE IF NOT EXISTS testdb;
    
    -- Connect to testdb
    \c testdb
    
    -- Create test table
    CREATE TABLE IF NOT EXISTS customers (
      id SERIAL PRIMARY KEY,
      name VARCHAR(100) NOT NULL,
      email VARCHAR(100) UNIQUE NOT NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    -- Create trigger to update timestamp
    CREATE OR REPLACE FUNCTION update_updated_at_column()
    RETURNS TRIGGER AS $$
    BEGIN
      NEW.updated_at = CURRENT_TIMESTAMP;
      RETURN NEW;
    END;
    $$ language 'plpgsql';
    
    CREATE TRIGGER update_customers_updated_at 
    BEFORE UPDATE ON customers
    FOR EACH ROW 
    EXECUTE FUNCTION update_updated_at_column();
    
    -- Insert sample data
    INSERT INTO customers (name, email) VALUES 
      ('Alice Smith', 'alice@example.com'),
      ('Bob Johnson', 'bob@example.com'),
      ('Charlie Brown', 'charlie@example.com')
    ON CONFLICT (email) DO NOTHING;
